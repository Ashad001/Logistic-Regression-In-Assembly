INCLUDE irvine32.inc
INCLUDE macros.inc

.data 
targetY     DWORD 186,127,158,141,168,185,185,184,117,179,144,179,133,121,150,157,159,112,132,169,209,166,199,158,221
currScoreX  DWORD 90,115,112,129,120,130,103,133,109,140,100,149,111,110,140,89,100,97,110,128,135,155,180,142,149
XMeanSub    REAL8 lengthof currScoreX DUP (?)
YMeanSub    REAL8 lengthof targetY DUP (?)
meanX		BYTE "The mean sub array of x is: ",0
meanY		BYTE "The mean sub array of y is: ",0
medianX     Byte "The mean of CurrentScoreX is: ",0
medianY	    Byte "The mean of targetY is: ",0
y_intercept Byte "The y-intercept is equal to: ",0
slope	    Byte "The slope is equal to: ",0
co_relation Byte "The co-relation constant is equal to: ",0
SDX		    Byte "The standard deviation of x is equal to: ",0
SDY 	    Byte "The standard deviation of y is equal to: ",0
SummationX  Byte "The sum of current score is equal to: ",0
SummationY  Byte "The sum of target is equal to: ",0
equation	BYTE "The equation of linear regression is: ",0
slopeVal	BYTE "The value of b is: ",0
interVal	BYTE "The value of a is: ",0
addition	BYTE " + ",0
xLet		BYTE " . x",0
yLet		BYTE "y = ", 0
r			REAL8 ?
a			REAL8 ?
b			REAL8 ?
SumX		DWORD ?
SumY		DWORD ?
MeanSubSumX	Real8 ?
MeanSubSumY	Real8 ?
sep		    Byte " | ", 0
medOfX      REAL8 ?
medOfY      REAL8 ?
StandardX   REAL8 ?
StandardY	REAL8 ?
store		SDWORD ?
temporary1	Real8 0.00
temporary2  DWORD 0
temporary3	Real8 0.00


.code
main PROC

; Printing both the x and y co-ordinate arrays
MOV esi, OFFSET targetY
MOV edi, OFFSET currScoreX
MOV ecx, LENGTHOF targetY
MOV edx, OFFSET sep
Display:
	MOV eax, [esi]
	call WriteDec
	call WriteString
	MOV eax, [edi]
	call WriteDec
	ADD esi, 4
	ADD edi, 4
	call crlf
LOOP Display
call crlf
call crlf




exit
main ENDP

sumarr PROC
	push ebp
	mov ebp, esp
	mov edx, DWORD PTR [ebp+8]		; type
	mov ecx, DWORD PTR [ebp+12]		; length
	mov esi, DWORD PTR [ebp+16]		; offset target
	mov edi, DWORD PTR [ebp+20]		; sum var offset
	mov eax, 0
	L2:
		ADD eax, [esi]
		add esi, edx
	loop L2
	mov [edi], eax
	mov esp, ebp
	pop ebp
	ret 16
sumarr ENDP

END main